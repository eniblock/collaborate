# Default values for collaborate.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: ""

api:
  enabled: true

  image:
    repository: "eniblock/collaborate-api"
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    # tag:

  imagePullSecrets: [ ]

  replicaCount: 1

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }

  networkPolicy:
    enabled: true

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 7772

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    requests:
      cpu: 50m
      memory: 300Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

  traefik:
    image:
      tag: traefik:v2.4.9
      pullPolicy: IfNotPresent
    ports:
      web: 80
      websecure: 8443
      api: 8081
    pilot:
      token: ""
    log:
      level: ""
    certificates:
      persistence:
        path: /etc/ssl/certs/xdev/collaborate/
        enabled: true
        existingClaim: ""
        storageClass: ""
        accessModes:
          - ReadWriteOnce
        size: 1Gi
    providers:
      persistence:
        path: /etc/traefik/xdev/collaborate/providers/
        enabled: true
        existingClaim: ""
        storageClass: ""
        accessModes:
          - ReadWriteOnce
        size: 1Gi

  metrics:
    enabled: false # Add metrics server first
    interval:
    scrapeTimeout:

  spring:
    profiles:
      active:

  transactionWatchers:
    fixedDelayInMs: 500
db:
  nameOverride: api-db
  postgresqlDatabase: api
  postgresqlUsername: api_user
  existingSecret: "{{ .Release.Name }}-{{ .Values.nameOverride }}"
  persistence:
    enabled: true
    size: 1Gi
  image:
    tag: 12.10.0-debian-10-r10
  resources:
    requests:
      memory: 50Mi
      cpu: 100m
  primary:
    annotations:
      reloader.stakater.com/auto: "true"
  rbac:
    create: true
  serviceAccount:
    enabled: true
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
    resources:
      requests:
        memory: 32Mi
        cpu: 10m
  networkPolicy:
    enabled: true
    allowExternal: false

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
  host: ""
  from:
    - podSelector: { }
      namespaceSelector:
        matchLabels:
          name: ingress

keycloak:
  nameOverride: keycloak
  extraEnvVars:
    - name: KEYCLOAK_LOGLEVEL
      value: "DEBUG"
    - name: WILDFLY_LOGLEVEL
      value: "DEBUG"
    - name: REALM
      value: "collaborate"
    - name: ROLE_ATTRIBUTE_KEY
      value: "type"
    - name: ROLE_ATTRIBUTE_VALUE
      value: "collaborate"
  service:
    type: ClusterIP
  commonAnnotations:
    reloader.stakater.com/auto: "true"
  image:
    registry: docker.io
    repository: eniblock/collaborate-keycloak
    # FIXME
    tag: develop
    pullSecrets: [ ]
  auth:
    adminUser: kcadmin
    existingSecretPerPassword:
      keyMapping:
        adminPassword: admin-password
        managementPassword: management-password
        databasePassword: postgresql-password
      adminPassword:
        name: "{{ .Release.Name }}-{{ .Values.nameOverride }}"
      managementPassword:
        name: "{{ .Release.Name }}-{{ .Values.nameOverride }}"
      databasePassword:
        name: "{{ .Release.Name }}-{{ .Values.postgresql.nameOverride }}"
  extraEnvVarsSecret: '{{ .Release.Name }}-collaborate-keycloak-extra-secrets'
  podLabels:
    "{{ .Release.Name }}-{{ .Values.postgresql.nameOverride }}-client": "true"
  resources:
    requests:
      cpu: 50m
      memory: 750Mi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  postgresql:
    nameOverride: keycloak-db
    existingSecret: "{{ .Release.Name }}-{{ .Values.nameOverride }}"
    persistence:
      enabled: true
      size: 1Gi
    resources:
      requests:
        memory: 50Mi
        cpu: 50m
    primary:
      annotations:
        reloader.stakater.com/auto: "true"
    rbac:
      create: true
    serviceAccount:
      enabled: true
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
      resources:
        requests:
          memory: 32Mi
          cpu: 10m
    networkPolicy:
      enabled: true
      allowExternal: false


ipfs:
  image:
    repository: ipfs/go-ipfs
    pullPolicy: IfNotPresent
    tag: v0.10.0
  log:
    level: INFO
  persistence:
    enabled: true
    existingClaim: ""
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 1Gi
  service:
    swarm:
      type: ClusterIP
      port: 4001
      ipAddress: null
    api:
      type: ClusterIP
      port: 5001
      ipAddress: null
    gtw:
      type: ClusterIP
      port: 8080
      ipAddress: null
  resources:
    requests:
      memory: 50Mi
      cpu: 50m

mail:
  dev: false
  host: ""
  port: ""
  username: ""
  password: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

tezos-api-gateway:
  nameOverride: tag
  rabbitmq:
    nameOverride: tag-rabbitmq
    auth:
      tls:
        enabled: false
  db:
    nameOverride: tag-db
  vault:
    nameOverride: tag-vault
  extraEnvVars:
    LOGGER_LEVEL: "WARN" # https://github.com/trentm/node-bunyan#level-suggestions
