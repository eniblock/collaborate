apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "collaborate-dapp.fullname" . }}-iam
  labels:
    {{- include "collaborate-dapp.labels" . | nindent 4 }}
    app.kubernetes.io/component: iam
spec:
  {{- if not .Values.iam.autoscaling.enabled }}
  replicas: {{ .Values.iam.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "collaborate-dapp.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: iam
  template:
    metadata:
      {{- with .Values.iam.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "collaborate-dapp.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: iam
    spec:
      {{- with .Values.iam.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: collaborate-dapp-iam
      securityContext:
        {{- toYaml .Values.iam.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          lifecycle:
            postStart:
              exec:
                command:
                  - "sh"
                  - "-c"
                  - >
                    keytool -importcert -alias fake-datasource -file /etc/ssl/certs/fake-datasource.crt -trustcacerts -cacerts -storepass changeit -noprompt;
          securityContext:
            {{- toYaml .Values.iam.securityContext | nindent 12 }}
          image: "{{ .Values.iam.image.repository }}:{{ .Values.iam.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.iam.image.pullPolicy }}
          env:
            - name: KEYCLOAK_USER
              value: {{ .Values.iam.username | quote }}
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-iam"
                  key: iam-password
            - name: DB_ADDR
              value: "{{ .Release.Name }}-{{ .Values.iam.postgresql.name }}"
            - name: DB_DATABASE
              value: {{ .Values.iam.postgresql.postgresqlDatabase | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.iam.postgresql.name }}"
                  key: postgresql-password
            - name: DB_USER
              value: {{ .Values.iam.postgresql.postgresqlUsername | quote }}
            - name: DB_VENDOR
              value: postgres
            - name: SMTP_HOST
              value: {{ .Values.iam.smtp.host | quote }}
            - name: SMTP_AUTH
              value: {{ .Values.iam.smtp.auth | quote }}
            - name: SMTP_SSL
              value: {{ .Values.iam.smtp.ssl | quote }}
            {{ if .Values.iam.smtp.auth }}
            - name: SMTP_USER
              value: {{ .Values.iam.smtp.username | quote }}
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-iam"
                  key: smtp-password
            {{ end }}
            - name: BACKEND_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-iam"
                  key: backend-secret
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
          resources:
            {{- toYaml .Values.iam.resources | nindent 12 }}
          volumeMounts:
            - name: fake-datasource-cert
              mountPath: /etc/ssl/certs/fake-datasource.crt
              subPath: fake-datasource.crt
              readOnly: true
      {{- with .Values.iam.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.iam.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.iam.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: fake-datasource-cert
          secret:
            secretName: "fake-datasource.localhost-tls"
            items:
              - key: ca.crt
                path: fake-datasource.crt
