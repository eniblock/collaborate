apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "collaborate-dapp.fullname" . }}-ipfs
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "collaborate-dapp.labels" . | nindent 4 }}
    app.kubernetes.io/component: ipfs
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  selector:
    matchLabels:
      {{- include "collaborate-dapp.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: ipfs
  template:
    metadata:
      labels:
        {{- include "collaborate-dapp.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: ipfs
    spec:
      serviceAccountName: {{ include "collaborate-dapp.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}-ipfs
          image: {{ .Values.ipfs.image.repository }}:{{ .Values.ipfs.image.tag }}
          imagePullPolicy: {{ .Values.ipfs.image.pullPolicy }}
          args:
            - daemon
            - --migrate=true
          ports:
            - name: swarm
              containerPort: 4001
              protocol: TCP
            - name: api
              containerPort: 5001
              protocol: TCP
            - name: gtw
              containerPort: 8080
              protocol: TCP
          env:
            - name: IPFS_LOGGING
              value: {{ .Values.ipfs.log.level }}
          livenessProbe:
            tcpSocket:
              port: swarm
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            tcpSocket:
              port: swarm
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
          resources:
            {{- toYaml .Values.ipfs.resources | nindent 12 }}
      volumes:
        - name: {{ include "collaborate-dapp.fullname" . }}-ipfs
          persistentVolumeClaim:
            claimName: {{ .Values.ipfs.persistence.existingClaim | default (printf "%s-ipfs" (include "collaborate-dapp.fullname" . )) }}
