stages:
  - test
  - docker
  - helm

variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

cache:
  key: "$CI_JOB_NAME"
  paths:
    - .m2/repository

# catalog

test-catalog-api:
  stage: test
  image: openjdk:11-jdk-slim
  before_script:
    - cd catalog/api
  script:
    - ./mvnw test

docker-catalog-api:
  stage: docker
  image:
    name: tbxdev/build-docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - build_with_helm_tag $CI_REGISTRY_IMAGE/catalog/api helm/collaborate-catalog catalog/api

docker-catalog-iam:
  stage: docker
  image:
    name: tbxdev/build-docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - build_with_helm_tag $CI_REGISTRY_IMAGE/catalog/iam helm/collaborate-catalog catalog/iam

helm-catalog:
  stage: helm
  image: tbxdev/build-helm
  script:
    - helm registry login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - helm dependency update ./helm/collaborate-catalog
    - build $CI_REGISTRY_IMAGE/helm/collaborate-catalog ./helm/collaborate-catalog .keycloak.image.tag


# dapp

test-dapp-api:
  stage: test
  image: openjdk:11-jdk-slim
  before_script:
    - cd dapp/api
  script:
    - ./mvnw test

docker-dapp-api:
  stage: docker
  image:
    name: tbxdev/build-docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - build_with_helm_tag $CI_REGISTRY_IMAGE/dapp/api helm/collaborate-dapp dapp/api

docker-dapp-iam:
  image:
    name: tbxdev/build-docker
  stage: docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - build_with_helm_tag $CI_REGISTRY_IMAGE/dapp/iam helm/collaborate-dapp dapp/iam

helm-dapp:
  stage: helm
  image: tbxdev/build-helm
  script:
    - helm registry login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - helm dependency update ./helm/collaborate-dapp
    - build $CI_REGISTRY_IMAGE/helm/collaborate-dapp ./helm/collaborate-dapp .keycloak.image.tag


# fake datasource

docker-fake-datasource-api:
  stage: docker
  image:
    name: tbxdev/build-docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - build_with_helm_tag $CI_REGISTRY_IMAGE/fake-datasource/api helm/fake-datasource fake-datasource/datasource-api

docker-fake-datasource-iam:
  stage: docker
  image:
    name: tbxdev/build-docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - build_with_helm_tag $CI_REGISTRY_IMAGE/fake-datasource/iam helm/fake-datasource fake-datasource/datasource-iam

helm-fake-datasource:
  stage: helm
  image: tbxdev/build-helm
  script:
    - helm registry login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - helm dependency update ./helm/fake-datasource
    - build $CI_REGISTRY_IMAGE/helm/fake-datasource ./helm/fake-datasource .keycloak.image.tag
